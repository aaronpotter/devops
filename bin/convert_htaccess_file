#!/usr/bin/env ruby

VERSION="1.0.0"

$:.unshift File.expand_path("../../lib", __FILE__)
require 'hashie'
require 'csv'
require 'pry'
require 'awesome_print'

begin

  opts = Slop.parse(strict: true, help: true) do
    banner "Copyright Files, version #{VERSION}\n\nUsage: convert_htaccess_file [options]"
    on 'f', 'file_path',  '[required] the path to the htaccess file to be converted.', argument: true
    on 'v', 'version' do
     puts "Copyright Files, version #{VERSION}"
     exit 0
    end
  end

  raise 'File path, required!' unless opts.file_path?

  opts = Hashie::Mash.new(opts.to_hash)

  lines = IO.readlines(File.expand_path("#{opts.file_path}"))
  lines.select!{ |l| l !~ /^(#.+|\n|Options|RewriteEngine)/ }

  def process_rows
    conditions = @cond[0..-2]
    conditions.each do |cond|
      cond.gsub!('^', '')
      @rule.each do |rule|
        rule.map!{|r| r.gsub(/(\^|\$)/, '') }
        @put_me_in_csv << ["#{cond}(.+)?#{rule[0]}", rule[1]]
      end
    end
    @cond = [@cond[-1]]
    @rule = []
  end

  @cond = []
  @rule = []
  @put_me_in_csv = []
  switch = nil
  lines.each do |line|
    orig_switch = switch
    line.gsub!(/("|\t)/, '')
    line.gsub!(/\s{2,}/, ' ')
    if line =~ /^RewriteCond/
      switch = :cond
      @cond << line.split(' ')[2]
    elsif line =~ /^RewriteRule/
      switch = :rule
      @rule << line.split(' ')[1,2]
    end
    process_rows if orig_switch != switch && switch == :cond
  end
  CSV.open('docs/wcm_htaccess.csv', 'wb') do |csv|
    csv << %w{ REGEX DESTINATION }
    @put_me_in_csv.each do |row|
      csv << row
    end
  end

  puts "File created '#{File.expand_path('docs/wcm_htaccess.csv')}'"

rescue => e
  puts ''
  puts e.message
  puts ''
  puts opts
end
